Displaying user attribute by mention
------------------------------------
*********Getting the member*********
let guild = client.guilds.get("306258975509446656"); //retrieve guild
let member = guild.member(message.mentions.users.first()); //get first mention of message
let nickname = member ? member.displayName : null; //if member is there get the displayname otherwise null


Collect message response
------------------------
const collector = new Discord.MessageCollector(message.channel, m => m.author.id === message.author.id, { time: 10000 });
//console.log(collector)
collector.on('collect', message => {
  if (message.content == "Y") {
                
              
  } else if (message.content == "N") {  }
});




URLS
-------------------
CSS COLORS (CANVAS)
http://w3schools.sinsixx.com/css/css_colornames.asp.htm

deleted commands // 

  if (command == "nick") {
    var nickname = message.content.replace(":nick", "");
    
    if (message.mentions.members.first()) {
      const member1 = message.mentions.members.first();
      var nick2 = nickname.replace(member1, "");
      member1.setNickname(nick2);
    } else {
      const member1 = message.member;
      member1.setNickname(nickname);
    } 
  } 

  if (command == "fight") {
    var msg = message.content;
    var txt = msg.replace(":fight ", "");
    var fight = txt.split(" ");
    const attachment = new Attachment(
      "http://dannydebito.000webhostapp.com/fight.php?text=" +
        fight[0] +
        "&text2=" +
        fight[1] +
        "&text3=" +
        fight[2] +
        "#.jpg"
    );
    message.channel.send(attachment);
  }
  
  
if (command === "mse") {
    message.channel
      .fetchMessages()
      .then(messages => {
        const botMessages = messages.filter(msg => msg.author.bot);
        message.channel.bulkDelete(botMessages);
        var messagesDeleted = botMessages.array().length; // number of messages deleted

        // Logging the number of messages deleted on both the channel and console.
        message.channel.send(
          "Deletion of messages successful. Total messages deleted: " +
            messagesDeleted
        );
        console.log(
          "Deletion of messages successful. Total messages deleted: " +
            messagesDeleted
        );
      })
      .catch(err => {
        console.log("Error while doing Bulk Delete");
        console.log(err);
      });
  }
  
EXP DECREMENT PER MESSAGE 
---------------------------
//Auto decrement pet hunger when message sent!!!
console.log(message.content);
if(message.content.split(" ")[0] != ":pet" || message.content.split(" ")[0]  != ":profile" || message.content != "N" || 
   message.content != "E" || message.content != "A" || message.author.id != '572539036418441259' && collecting == 1){
  var pool        = mysql.createPool({
    connectionLimit : 100, // default = 10
    host            : process.env.db_host,
    user            : process.env.db_user,
    password        : process.env.db_passwd,
    database        : process.env.db_name
  });
  
pool.getConnection(function (err, connection) {
  if (err) throw err;
  var initQer;
  var mesId;
  mesId = message.author.id;
  initQer = "SELECT * FROM members WHERE id=" + mesId;
  if(connection.query(initQer, function(result, fields) {}) != undefined){
      connection.query(initQer, function(err, result, fields) {
        if (!result.length) {
            console.log('no profile available to increment!');
        } else {
          var mes = JSON.stringify(result[0].mes).replace(/[\<>@#&!"]/g, "");
              mes = parseInt(mes);
              mes += 1;
              /*UPDATE members SET mes = previous+1 WHERE id = 'ID'*/
              var update = "UPDATE members SET mes = " + mes + " WHERE id = " + mesId;
        
              connection.query(update, function(err, result, fields) {
                if (err) throw err;
               
                else{ connection.release();
                  console.log("message incremented = " + mes);
                  var query;
                  var id;
                  id = message.author.id;
                  query = "SELECT * FROM pets WHERE oid=" + id;
                    if (err) throw err;
                      connection.query(query, function(err, result, fields) {
                      if (err) throw err;
                      //check if profile exists
                    if (!result.length) {
                    console.log("no pet to decrement")
                    } else {
                          var hunger = JSON.stringify(result[0].hunger).replace(/[\<>@#&!"]/g, "");
                          var type = JSON.stringify(result[0].type).replace(/[\<>@#&!"]/g, "");
                          hunger = parseInt(hunger);
                          if (hunger >= 1) {
                            if (hunger == 75 || hunger == 50 || hunger == 25) hunger -= 1;
                            mes = mes%2;
                            console.log(mes);
                            if(mes == 0)
                            hunger -= 1;
                          }
                      /*UPDATE pets SET love = 55 WHERE oid = 'ID'*/
                      var update = "UPDATE pets SET hunger = " + hunger + " WHERE oid = '" + id + "'";
        
                      connection.query(update, function(err, result, fields) {
                        if (err) throw err;
                        else {if(mes == 0)console.log("hunger decremented!");
                            if(hunger == 75) message.channel.send(":meat_on_bone: *** your pet is a little hungry *** :meat_on_bone:");
                            if (hunger == 50) message.channel.send(":bone: :cut_of_meat: :rice_cracker: *** your pet is HUNGRY *** :bone: :cut_of_meat: :rice_cracker:");
                            if (hunger == 25) message.channel.send(":woozy_face: :skull_crossbones: :fish_cake:  *** YOUR PET IS STARVING *** :woozy_face: :skull_crossbones: :fish_cake: ");
                            if(hunger == 0 && type == "Wisp"){
                              message.channel.send("Your pet has died.");
                               var update = "UPDATE pets SET type = " + "'Ghast'" + " WHERE oid = '" + id + "'";
                                connection.query(update, function(err, result, fields) {
                                if (err) throw err;
                                });
                                              
                             }
                             }  
                      });
                    }
            });       
                    
                    }
              });
        }
      });
  }
    });
}
//Auto decrement pet hunger when message sent!!!

//temporarily deprecated SQL functions
    /*query = "SELECT * FROM pets WHERE oid=" + id;
    
    con.connect(function(err) {
      if (err) throw err;
      con.query(query, function(err, result, fields) {
        if (err) throw err;
        //check if profile exists
        if (!result.length) {
          var petName = "Coon";
          var insert ="INSERT INTO pets (oid, name) VALUES ('" +id +"', '" + petName + "')";
          
          con.query(insert, function(err, result, fields) {
            if (err) throw err;
            else
              message.channel.send(
                "Your pet did not exist so one has been created for you!"
              );
          });
        } else {
          //pet exists, loading page
          var name = JSON.stringify(result[0].name).replace(/[\<>@#&!"]/g, "");
          var face = JSON.stringify(result[0].face).replace(/[\<>@#&!"]/g, "");
          var hat = JSON.stringify(result[0].hat).replace(/[\<>@#&!"]/g, "");
          var exp = JSON.stringify(result[0].exp).replace(/[\<>@#&!"]/g, "");
          var love = JSON.stringify(result[0].love).replace(/[\<>@#&!"]/g, "");
          var hunger = JSON.stringify(result[0].hunger).replace(/[\<>@#&!"]/g,"");
          var type = JSON.stringify(result[0].type).replace(/[\<>@#&!"]/g, "");
          const canvas = Canvas.createCanvas(300, 300);
          const ctx = canvas.getContext("2d");
          console.log(face);
          game.drawPet(Canvas,canvas,ctx,Discord,message,name,exp,love,hunger,type,face,hat);
          
          
        if(type != 'Ghast'){
          const collector = new Discord.MessageCollector(
            message.channel,
            m => m.author.id === message.author.id,
            { time: 40000 }
          );
          collector.on("collect", message => {
            //*************LUB******************************
            if (message.content == ":lub") {
              love = parseInt(love);
              if (love < 100) {
                love += 5;
              }
              //UPDATE pets SET love = 55 WHERE oid = 'ID'
              var update = "UPDATE pets SET love = " + love + " WHERE oid = '" + id + "'";

              con.query(update, function(err, result, fields) {
                if (err) throw err;
                else message.channel.send("Love has increased by 5");
              });
              game.drawPet(Canvas,canvas,ctx,Discord,message,name,exp,love,hunger,type,face,hat);
              collector.stop();
            }
            //***********NAME CHANGE*******************
            if (message.content.split(" ")[0] == ":rename") {
              name = message.content.replace(":rename ", "");
              console.log(name);
              //UPDATE pets SET name = 'name' WHERE oid = 'ID'
              var update = "UPDATE pets SET name = '" + name + "' WHERE oid = '" + id + "'";

              con.query(update, function(err, result, fields) {
                if (err) throw err;
                else message.channel.send("You have renamed your pet into " + name);
              });
              game.drawPet(Canvas,canvas,ctx,Discord,message,name,exp,love,hunger,type,face,hat);
              collector.stop();
              collector.on("end", collected => {
              message.channel.send("Exiting pet menu...");
              });
            }
            //************FEED*************************
            if(message.content.split(" ")[0] == ":borg"){
              hunger = parseInt(hunger);
              if (hunger < 100) {
                hunger += 25;
              }
              if(hunger > 100){
                hunger = 100;
              }
              var update = "UPDATE pets SET hunger = " + hunger + " WHERE oid = '" + id + "'";

              con.query(update, function(err, result, fields) {
                if (err) throw err;
                else message.channel.send(name + " ate some borger uwu. . .");
              });
              game.drawPet(Canvas,canvas,ctx,Discord,message,name,exp,love,hunger,type,face,hat);
              collector.stop();
              collector.on("end", collected => {
              message.channel.send("Exiting pet menu...");
              });
            }
            //**************FACES**********************
            if (message.content.split(" ")[0] == ":face") {
              face = message.content.replace(":face ", "");
              console.log(face);
              if(face < 5 && face > -1){
              //UPDATE pets SET name = 'name' WHERE oid = 'ID'
              var update = "UPDATE pets SET face = " + face + " WHERE oid = '" + id + "'";

              con.query(update, function(err, result, fields) {
                if (err) throw err;
                else message.channel.send("You changed " + name + "'s face.");
              });
              game.drawPet(Canvas,canvas,ctx,Discord,message,name,exp,love,hunger,type,face,hat);
              collector.stop();
              collector.on("end", collected => {
              message.channel.send("Exiting pet menu...");
              });
              }
            }
            //****************HAT**********************
            if (message.content.split(" ")[0] == ":hat") {
              hat = message.content.replace(":hat ", "");
              console.log(hat);
              if(hat < 7 && hat > -1){
              //UPDATE pets SET name = 'name' WHERE oid = 'ID'
              var update = "UPDATE pets SET hat = " + hat + " WHERE oid = '" + id + "'";

              con.query(update, function(err, result, fields) {
                if (err) throw err;
                else message.channel.send("You changed " + name + "'s hat.");
              });
              game.drawPet(Canvas,canvas,ctx,Discord,message,name,exp,love,hunger,type,face,hat);
              collector.stop();
              collector.on("end", collected => {
              message.channel.send("Exiting pet menu...");
              });
              }
            }
            //**************ADVENTURE******************
            if(message.content.split(" ")[0] == ":advnt") {
              const cnv = Canvas.createCanvas(500, 300);
              const cvx = cnv.getContext("2d");
              var attack = null;
              var enemy = 100;
              //Load experience as int
              exp = parseInt(exp);
              //Load hunger as int
              hunger = parseInt(hunger);
              //Draw initial field
              game.drawAdv(Canvas, cnv, cvx, message, Discord, type,face,hat,attack)
              
              
              const adCollector = new Discord.MessageCollector(
              message.channel,
              m => m.author.id === message.author.id,
              { time: 100000 }
              );
              adCollector.on("collect", message => {
                var num = Math.round(Math.random() * 100);
                if(message.content == 'A'){//Attack
                  if(num < 40 && num > 5){
                    const fgCollector = new Discord.MessageCollector(
                    message.channel,
                    m => m.author.id === message.author.id,
                    { time: 30000 }
                    );
                    
                    message.channel.send("You attack the city!!! >:€");
                    fgCollector.on("collect", message => {
                      if(message.content == "blast"){
                        message.channel.send(name + " shoots a blast causing 20 damage!");
                        attack = 'blast';
                        game.drawAdv(Canvas, cnv, cvx, message, Discord, type, face, hat, num, attack)
                        exp += 50;
                        var amount = 0;
                        var update = "UPDATE pets SET exp = " + exp + " WHERE oid = '" + id + "'";
                        con.query(update, function(err, result, fields) {
                        if (err) throw err;
                        else message.channel.send(name + " gained 50 experience!\nand lost " + amount + " love!");
                        });
                        hunger -= 10
                        update = "UPDATE pets SET hunger = " + hunger + " WHERE oid = '" + id + "'";
                        con.query(update, function(err, result, fields) {
                        if (err) throw err;
                        else {}
                        });
                      }
                    });
                  }
                  else if(num < 80 && num > 40){
                    
                  }
                  else{
                    message.channel.send("you attack nothing umu!");
                  }
                }
                  
                if(message.content == 'N')//Next
                  { num = Math.round(Math.random() * 100);
                   game.drawAdv(Canvas, cnv, cvx, message, Discord, type,face,hat,num,attack)}
                if(message.content == 'E')//Return
                  adCollector.stop();
              });
              collector.stop();
            }
            //****************INFO*********************
            if (message.content.split(" ")[0] == ":info") {
              message.channel.send("```**PET INFO**\nCommands: {:lub, :name}\n*:lub* - Keeps up the pets love bar\n*:name* - Renames pet\nAbout: ```");
            }
          });
          collector.on("end", collected => {
              collecting = 1;
              });
        }
        else{
          
        }
      }
    });
        
  });*/
  
  
    if (command == "vote") {
    var msg = message.content;
    var txt = msg.replace(":vote ", "");
    message.react("🇾");
    message.react("🇳");
  }

  //dangerous and administrator commands 
  /*if(command=="off") {
       if ((user == "Malaise", "Melo")) {
              offuser = message.mentions.members.first().id;
         }
         else {
      message.channel.send("You can't use that commmand you fucking loser.");
    }
    
  }
  if(command=="on") {
    if((user == "Malaise", "Melo")) {
      offuser = "";
    } else {
      message.channel.send("You can't use that commmand you fucking loser.");
    }
  }*/